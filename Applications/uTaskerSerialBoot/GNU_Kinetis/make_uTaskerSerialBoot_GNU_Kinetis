# Make file for uTasker serial loader build for Kinetis
#
# 18.07.2011 Add K40 linker script options
# 22.01.2012 Add files for SD card loader
# 11.01.2014 Add K20D128_50 linker script options (128k program Flash / 16k SRAM)
# 15.04.2014 Add additional files for web server uploading capability
# 20.05.2014 Loader.h set as general dependancy
# 05.08.2014 Modified compiler and linker options to achieve around 20% smaller code size
# 24.03.2015 Add kinetis hardware peripheral headers as dependencies
# 11.07.2015 Add usb_application.c
# 23.10.2015 Add usb_host_loader, rename usb_loader.c to usb_device_loader.c, rename SDLoader.c to disk_loader.c rename Loader.c to serial_loader.c, and use new kinetis_USB_OTG.h
# 05.10.2017 Add Modbus package
# 30.11.2017 Add make_uTaskerSerialBoot_GNU_Kinetis to dependencies to ensure clean each time this file is modified
# 03.07.2018 Add -Wundef in order to discover any undefined definitions
# 09.03.2019 Change location of SPI memory includes (to ../SPI_Memory)
# 15.05.2020 Change USB hardware dependencies to kinetis_USB_FS_OTG.h and kinetis_USB_HS_OTG.h


# Compiler flags (thumb mode - little endian)

# (set to Cortex-M4 or Cortex-M0+ accordingly)
C_FLAGS = -mcpu=cortex-m0plus -mthumb -mlittle-endian -mthumb -Wall -Wstrict-prototypes -fmessage-length=0 -fsigned-char  -ffunction-sections -fdata-sections -Wundef
#C_FLAGS = -mcpu=cortex-m4 -mthumb -mlittle-endian -mthumb -Wall -Wstrict-prototypes -fmessage-length=0 -fsigned-char  -ffunction-sections -fdata-sections -Wundef
#C_FLAGS = -mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mlittle-endian -mthumb -Wall -Wstrict-prototypes -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -Wundef
#C_FLAGS = -mcpu=cortex-m7 -mthumb -mlittle-endian -mthumb -Wall -Wstrict-prototypes -fmessage-length=0 -fsigned-char  -ffunction-sections -fdata-sections -Wundef

LINKER_SCRIPT  = K32L_256_32

# All objects (Hardware, application, uTasker, stack)
#
OBJS = Build/serial_loader.o Build/usb_device_loader.o Build/disk_loader.o Build/usb_host_loader.o Build/usb_application.o Build/webInterface.o \
       Build/mass_storage.o \
       Build/MODBUS.o Build/modbus_app.o \
       Build/GLCD.o \
	   Build/crypto.o \
	   Build/aes_mbedTLS.o \
       Build/eth_drv.o Build/Driver.o Build/uMalloc.o Build/uTasker.o Build/Tty_drv.o Build/i2c_drv.o Build/USB_drv.o Build/uFile.o Build/Watchdog.o \
	   Build/Ethernet.o Build/arp.o Build/ip.o Build/tftp.o Build/udp.o Build/tcp.o Build/http.o Build/dhcp.o Build/ip_utils.o Build/webutils.o Build/icmp.o \
	   Build/mmcau_aes_functions.o

ifeq (,$(findstring mcpu=cortex-m0plus,$(C_FLAGS)))
A_FLAGS = -DARM_MATH_CM4
else
A_FLAGS = -DARM_MATH_CM0PLUS
endif

OBJS2 = Build/kinetis.o

OBJS2_BM = Build/kinetis_bm.o

#General dependencies
#
DEPENDS = ../config.h ../app_hw_kinetis.h ../Loader.h ../types.h ../TaskConfig.h ../../../uTasker/driver.h  ../../../uTasker/uTasker.h \
       ../../../uTasker/utFAT/mass_storage.h \
       ../../../uTasker/MODBUS/modbus.h \
       ../../../uTasker/uGLCDLIB/glcd.h \
	   ../../../stack/tcpip.h \
       ../../../Hardware/hardware.h ../../../Hardware/Kinetis/kinetis.h \
       make_uTaskerSerialBoot_GNU_Kinetis

# Hardware peripheral dependencies
#
PERIPH_DEP = ../../../Hardware/Kinetis/spi_sc16IS7xx.h \
             ../../../Hardware/Kinetis/kinetis_DMA.h \
             ../../../Hardware/Kinetis/kinetis_I2S.h \
             ../../../Hardware/Kinetis/kinetis_ENET.h \
             ../../../Hardware/Kinetis/kinetis_USB_FS_OTG.h \
             ../../../Hardware/Kinetis/kinetis_USB_HS_OTG.h \
             ../../../Hardware/Kinetis/kinetis_UART.h \
             ../../../Hardware/Kinetis/kinetis_uart_pins.h \
             ../../../Hardware/Kinetis/kinetis_CAN.h \
             ../../../Hardware/Kinetis/kinetis_I2C.h \
             ../../../Hardware/Kinetis/kinetis_FLASH.h \
             ../../../Hardware/Kinetis/kinetis_SDHC.h \
             ../../../Hardware/Kinetis/kinetis_PWM.h \
             ../../../Hardware/Kinetis/kinetis_PORTS.h \
             ../../../Hardware/Kinetis/kinetis_LLWU.h \
             ../../../Hardware/Kinetis/kinetis_FLEXTIMER.h \
             ../../../Hardware/Kinetis/kinetis_DAC.h \
             ../../../Hardware/Kinetis/kinetis_ADC.h \
             ../../../Hardware/Kinetis/kinetis_low_power.h \
             ../../../Hardware/Kinetis/kinetis_KBI.h \
             ../../../Hardware/Kinetis/kinetis_RTC.h \
             ../../../Hardware/Kinetis/kinetis_PIT.h \
             ../../../Hardware/Kinetis/kinetis_LPTMR.h \
             ../../../Hardware/Kinetis/kinetis_PDB.h \
             ../../../Hardware/Kinetis/kinetis_K_CLOCK.h \
             ../../../Hardware/Kinetis/kinetis_MCG_LITE.h \
             ../../../Hardware/Kinetis/kinetis_HIRC.h \
             ../../../Hardware/Kinetis/kinetis_KL_CLOCK.h \
             ../../../Hardware/Kinetis/kinetis_KV_CLOCK.h \
             ../../../Hardware/Kinetis/kinetis_KW_CLOCK.h \
             ../../../Hardware/Kinetis/kinetis_KM_CLOCK.h \
             ../../../Hardware/Kinetis/kinetis_KE_CLOCK.h\
			 ../../../Hardware/SPI_Memory/spi_flash_interface.h


# SPI FLASH dependencies
#
SPI_FLASH_DEP = ../../../Hardware/SPI_Memory/spi_flash_kinetis_atmel.h \
                ../../../Hardware/SPI_Memory/spi_flash_kinetis_stmicro.h \
				../../../Hardware/SPI_Memory/spi_flash_kinetis_sst25.h \
				../../../Hardware/SPI_Memory/spi_flash_w25q.h \
				../../../Hardware/SPI_Memory/spi_flash_s25fl1-k.h \
				../../../Hardware/SPI_Memory/spi_flash_MX25L.h \
                ../../../Hardware/SPI_Memory/spi_eeprom_25AA160.h

INC     = -I../

OPTS    = -D _GNU -D _KINETIS -g -c -Os

CC      = arm-none-eabi-gcc
CC_OBJ  = arm-none-eabi-objcopy
CC_SIZE = arm-none-eabi-size


all: uTaskerSerialBoot.elf uTaskerSerialBoot_BM.elf

# Application files
#
Build/serial_loader.o: ../serial_loader.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../serial_loader.c -o Build/serial_loader.o

Build/usb_device_loader.o: ../usb_device_loader.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../usb_device_loader.c -o Build/usb_device_loader.o

Build/disk_loader.o: ../disk_loader.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../disk_loader.c -o Build/disk_loader.o

Build/usb_host_loader.o: ../usb_host_loader.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../usb_host_loader.c -o Build/usb_host_loader.o

Build/usb_application.o: ../usb_application.c $(DEPENDS) ../usb_msd_descriptors.h
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../usb_application.c -o Build/usb_application.o

Build/webInterface.o: ../webInterface.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../webInterface.c -o Build/webInterface.o



# Hardware files
#
Build/kinetis.o: ../../../Hardware/Kinetis/kinetis.c $(DEPENDS) $(PERIPH_DEP) $(SPI_FLASH_DEP)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../Hardware/Kinetis/kinetis.c -o Build/kinetis.o

Build/kinetis_bm.o: ../../../Hardware/Kinetis/kinetis.c $(DEPENDS) $(PERIPH_DEP) $(SPI_FLASH_DEP)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) -D _BM_BUILD ../../../Hardware/Kinetis/kinetis.c -o Build/kinetis_bm.o


# uTasker files
#
Build/uTasker.o: ../../../uTasker/uTasker.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/uTasker.c -o Build/uTasker.o

Build/Driver.o: ../../../uTasker/Driver.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/Driver.c -o Build/Driver.o

Build/crypto.o: ../../../uTasker/crypto.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/crypto.c -o Build/crypto.o

Build/uMalloc.o: ../../../uTasker/uMalloc.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/uMalloc.c -o Build/uMalloc.o

Build/Tty_drv.o: ../../../uTasker/Tty_drv.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/Tty_drv.c -o Build/Tty_drv.o

Build/i2c_drv.o: ../../../uTasker/i2c_drv.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/i2c_drv.c -o Build/i2c_drv.o

Build/USB_drv.o: ../../../uTasker/USB_drv.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/USB_drv.c -o Build/USB_drv.o

Build/uFile.o: ../../../uTasker/uFile.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/uFile.c -o Build/uFile.o

Build/Watchdog.o: ../../../uTasker/Watchdog.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/Watchdog.c -o Build/Watchdog.o

Build/eth_drv.o: ../../../uTasker/eth_drv.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/eth_drv.c -o Build/eth_drv.o



# uTasker TCP/IP files
#
Build/Ethernet.o: ../../../stack/Ethernet.c $(DEPENDS) ../../../stack/EthernetController/ENC424J600.h
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/Ethernet.c -o Build/Ethernet.o

Build/arp.o: ../../../stack/arp.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/arp.c -o Build/arp.o

Build/http.o: ../../../stack/http.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/http.c -o Build/http.o

Build/dhcp.o: ../../../stack/dhcp.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/dhcp.c -o Build/dhcp.o

Build/tftp.o: ../../../stack/tftp.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/tftp.c -o Build/tftp.o

Build/icmp.o: ../../../stack/icmp.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/icmp.c -o Build/icmp.o

Build/ip_utils.o: ../../../stack/ip_utils.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/ip_utils.c -o Build/ip_utils.o

Build/ip.o: ../../../stack/ip.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/ip.c -o Build/ip.o

Build/udp.o: ../../../stack/udp.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/udp.c -o Build/udp.o

Build/tcp.o: ../../../stack/tcp.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/tcp.c -o Build/tcp.o

Build/webutils.o: ../../../stack/webutils.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/webutils.c -o Build/webutils.o

# uGLCDLIB files
#
Build/GLCD.o: ../../../uTasker/uGLCDLIB/GLCD.c $(DEPENDS) ../../../uTasker/uGLCDLIB/glcd_fonts.h ../../../uTasker/uGLCDLIB/glcd_samsung.h ../../../uTasker/uGLCDLIB/glcd_toshiba.h ../../../uTasker/uGLCDLIB/glcd_oled.h ../../../uTasker/uGLCDLIB/glcd_cglcd.h ../../../uTasker/uGLCDLIB/glcd_st7565s.h ../../../uTasker/uGLCDLIB/glcd_tft.h
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/uGLCDLIB/GLCD.c -o Build/GLCD.o


# utFAT files
#
Build/mass_storage.o: ../../../uTasker/utFAT/mass_storage.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/utFAT/mass_storage.c -o Build/mass_storage.o

# Special packages
##################

# MODBUS
Build/MODBUS.o: ../../../uTasker/MODBUS/MODBUS.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../uTasker/MODBUS/MODBUS.c -o Build/MODBUS.o

Build/modbus_app.o: ../modbus_app.c $(DEPENDS)
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../modbus_app.c -o Build/modbus_app.o

#CRYPTO
Build/mmcau_aes_functions.o: ../../../Hardware/Kinetis/Crypto/mmcau_aes_functions.S
	 	$(CC) $(C_FLAGS) $(A_FLAGS) $(INC) $(OPTS) ../../../Hardware/Kinetis/Crypto/mmcau_aes_functions.S -o Build/mmcau_aes_functions.o

Build/aes_mbedTLS.o: ../../../stack/SSL/mbedtls-1.3.10/aes_mbedTLS.c $(DEPENDS) ../../../stack/SSL/mbedtls-1.3.10/aes.h
		$(CC) $(C_FLAGS) $(INC) $(OPTS) ../../../stack/SSL/mbedtls-1.3.10/aes_mbedTLS.c -o Build/aes_mbedTLS.o


# Link
# Create output files and show program size
#
uTaskerSerialBoot.elf: $(OBJS)  $(OBJS2) $(LINKER_SCRIPT).ld
	$(CC) $(C_FLAGS) -Os -g -T$(LINKER_SCRIPT).ld -nostartfiles -Xlinker --gc-sections -Wl,-Map,"uTaskerSerialBoot.map" -o "uTaskerSerialBoot.elf" $(OBJS) $(OBJS2)
	$(CC_OBJ) --output-target=srec uTaskerSerialBoot.elf uTaskerSerialBoot.s19
	$(CC_OBJ) --output-target=ihex uTaskerSerialBoot.elf uTaskerSerialBoot.hex
	$(CC_OBJ) --only-section=.data --only-section=.init --only-section=.text --only-section=.rodata --only-section=.vectors --only-section=.f_config --output-target=binary uTaskerSerialBoot.elf uTaskerSerialBoot.bin
	$(CC_SIZE)   uTaskerSerialBoot.elf

uTaskerSerialBoot_BM.elf: $(OBJS) $(OBJS2_BM) $(LINKER_SCRIPT)_BM.ld
	$(CC) $(C_FLAGS) -Os -g -T$(LINKER_SCRIPT)_BM.ld -nostartfiles -Xlinker --gc-sections -lm -Wl,-Map=uTaskerSerialBoot_BM.map -o uTaskerSerialBoot_BM.elf $(OBJS) $(OBJS2_BM)
	$(CC_OBJ) --only-section=.data --only-section=.init --only-section=.text --only-section=.rodata --only-section=.vectors --output-target=srec uTaskerSerialBoot_BM.elf uTaskerSerialBoot_BM.srec
	$(CC_OBJ) --only-section=.data --only-section=.init --only-section=.text --only-section=.rodata --only-section=.vectors --output-target=ihex uTaskerSerialBoot_BM.elf uTaskerSerialBoot_BM.hex
	$(CC_OBJ) --only-section=.data --only-section=.init --only-section=.text --only-section=.rodata --only-section=.vectors --output-target=binary uTaskerSerialBoot_BM.elf uTaskerSerialBoot_BM.bin
	$(CC_SIZE) uTaskerSerialBoot_BM.elf
	$(CC) -v


.PHONY: clean
clean:
	rm uTaskerSerialBoot.map
	rm uTaskerSerialBoot.elf
	rm uTaskerSerialBoot.s19
	rm uTaskerSerialBoot_BM.map
	rm uTaskerSerialBoot_BM.elf
	rm uTaskerSerialBoot_BM.srec
	rm uTaskerSerialBoot_BM.hex


# *** EOF ***
